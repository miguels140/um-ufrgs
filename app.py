import nltk
nltk.download('punkt', quiet=True)  # garante que o corpus est√° dispon√≠vel

import streamlit as st
from ufrgs_corretor import grade_ufrgs, detectar_erros

st.set_page_config(page_title="Corretor de Reda√ß√µes UFRGS", layout="wide")

st.title("üìù Corretor de Reda√ß√µes - UFRGS")
st.write("Cole abaixo sua reda√ß√£o e as palavras-chave do tema para receber a avalia√ß√£o e feedback de erros.")

# Campo para palavras-chave do tema
keywords = st.text_input(
    "Palavras-chave do tema (separe por v√≠rgulas):",
    "inclus√£o digital, educa√ß√£o, desigualdade"
)

# Campo para a reda√ß√£o
essay = st.text_area("Digite sua reda√ß√£o aqui:", height=400)

# Bot√£o para corrigir a reda√ß√£o
if st.button("Corrigir Reda√ß√£o"):
    if essay.strip():
        tema = [k.strip() for k in keywords.split(",") if k.strip()]
        result = grade_ufrgs(essay, tema)
        erros = detectar_erros(essay)

        st.subheader("üìä Resultado da Corre√ß√£o")
        st.write(f"**Express√£o (at√© 50 pts):** {result['expressao_total_50']}")
        st.write(f"**Estrutura & Conte√∫do (at√© 50 pts):** {result['estrutura_conteudo_total_50']}")
        st.write(f"**Total (0‚Äì100):** {result['total_100']}")
        st.write(f"**Nota na escala UFRGS (0‚Äì25):** {result['total_escala_25']}")

        st.subheader("üîç Detalhamento dos crit√©rios")
        st.write("**Express√£o:**")
        st.json(result["detalhes_expressao"])
        st.write("**Estrutura & Conte√∫do:**")
        st.json(result["detalhes_estrutura_conteudo"])

        st.subheader("‚ö†Ô∏è Poss√≠veis erros detectados")
        if erros:
            for e in erros:
                st.write("- " + e)
        else:
            st.write("Nenhum erro detectado!")
    else:
        st.warning("Por favor, cole uma reda√ß√£o para corrigir.")

